{
	"info": {
		"_postman_id": "?",
		"name": "Jira-API",
		"schema": "?",
		"_exporter_id": "?"
	},
	"item": [
		{
			"name": "get events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resp = pm.response.json();\r",
							"\r",
							"console.log(resp.length);\r",
							"\r",
							"pm.test(\"I got events\", ()=>{\r",
							"    pm.expect(resp.length).to.be.greaterThan(0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{jira-token}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{jira-username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{jira-fki}}/rest/api/3/events",
					"host": [
						"{{jira-fki}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "all the issues - set the first key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resp = pm.response.json();\r",
							"\r",
							"console.log(resp.issues[0].key);\r",
							"\r",
							"pm.collectionVariables.set(\"first_issue_key\", resp.issues[0].key);\r",
							"\r",
							"pm.test(\"I found some issues\", ()=>{\r",
							"    pm.expect(resp.issues.length).to.be.above(0);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{jira-token}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{jira-username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{jira-fki}}/rest/api/3/search",
					"host": [
						"{{jira-fki}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "get an issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resp = pm.response.json();\r",
							"const theKeyFromVar = pm.collectionVariables.get(\"first_issue_key\");\r",
							"pm.test(\"The key is correct\", ()=>{\r",
							"    pm.expect(resp.key).to.be.eql(theKeyFromVar);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{jira-token}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{jira-username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{jira-fki}}/rest/api/3/issue/:issueKey",
					"host": [
						"{{jira-fki}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{first_issue_key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Creating issue is succeed\", ()=>{\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const resp = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"keyOfCreatedIssue\", resp.key);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{jira-token}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{jira-username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fields\": {\r\n    \"project\": {\r\n      \"key\": \"FIR\"\r\n    },\r\n    \"summary\": \"Sample issue created via API\",\r\n    \"description\": {\r\n            \"type\": \"doc\",\r\n            \"version\": 1,\r\n            \"content\": [\r\n                {\r\n                \"type\": \"paragraph\",\r\n                \"content\": [\r\n                    {\r\n                    \"text\": \"This is the description.\",\r\n                    \"type\": \"text\"\r\n                    }\r\n                ]\r\n                }\r\n            ]\r\n    },\r\n    \"issuetype\": {\r\n      \"name\": \"Task\"\r\n    }\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{jira-fki}}/rest/api/3/issue",
					"host": [
						"{{jira-fki}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Issue is deleted\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{jira-token}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{jira-username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{jira-fki}}/rest/api/3/issue/:issueKey",
					"host": [
						"{{jira-fki}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						":issueKey"
					],
					"variable": [
						{
							"key": "issueKey",
							"value": "{{keyOfCreatedIssue}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jira-fki",
			"value": "?"
		},
		{
			"key": "keyOfCreatedIssue",
			"value": "?"
		},
		{
			"key": "jira-token",
			"value": "?",
			"type": "string"
		},
		{
			"key": "jira-username",
			"value": "?",
			"type": "string"
		},
		{
			"key": "first_issue_key",
			"value": "?"
		}
	]
}